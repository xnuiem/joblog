info:
  title: APIFlask
  version: 0.1.0
tags: []
paths:
  /job:
    post:
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful response
      summary: Adds a job to the datastore
      description: Creates a job for the first time
  /jobs:
    get:
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful response
      summary: Get Jobs
  /init/{key}:
    get:
      parameters:
      - in: path
        name: key
        schema:
          type: string
        required: true
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitDataOut'
              example:
                message: Invalid Key
          description: Invalid Key
        '200':
          content:
            application/json:
              schema: {}
          description: Data Init Complete
      summary: Initialize the base data in Redis
      description: Adds Status/Reason/Source values to Redis
  /clear/{key}:
    get:
      parameters:
      - in: path
        name: key
        schema:
          type: string
        required: true
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitDataOut'
              example:
                message: Invalid Key
          description: Invalid Key
        '200':
          content:
            application/json:
              schema: {}
          description: Data Flushed
      summary: Clears the entire datastore
      description: Should be used to clear all of Redis
  /job/{job_id}:
    get:
      parameters:
      - &id001
        in: path
        name: job_id
        schema:
          type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: &id002 {}
          description: Successful response
      summary: Handle Job
    patch:
      parameters:
      - *id001
      responses:
        '200':
          content:
            application/json:
              schema: *id002
          description: Successful response
      summary: Handle Job
    delete:
      parameters:
      - *id001
      responses:
        '200':
          content:
            application/json:
              schema: *id002
          description: Successful response
      summary: Handle Job
  /option/{scope}:
    get:
      parameters:
      - &id003
        in: path
        name: scope
        schema:
          type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: &id004 {}
          description: Successful response
      summary: Handle Option
    put:
      parameters:
      - *id003
      responses:
        '200':
          content:
            application/json:
              schema: *id004
          description: Successful response
      summary: Handle Option
  /job/{job_id}/interview:
    post:
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful response
      summary: Add Interview
  /job/{job_id}/interviews:
    get:
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful response
      summary: Get Interviews
  /job/{job_id}/interview/{int_id}:
    get:
      parameters:
      - &id005
        in: path
        name: job_id
        schema:
          type: string
        required: true
      - &id006
        in: path
        name: int_id
        schema:
          type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: &id007 {}
          description: Successful response
      summary: Handle Interview
    patch:
      parameters:
      - *id005
      - *id006
      responses:
        '200':
          content:
            application/json:
              schema: *id007
          description: Successful response
      summary: Handle Interview
    delete:
      parameters:
      - *id005
      - *id006
      responses:
        '200':
          content:
            application/json:
              schema: *id007
          description: Successful response
      summary: Handle Interview
openapi: 3.0.3
components:
  schemas:
    InitDataOut:
      type: object
      properties:
        message:
          type: string
          description: Return Message
      required:
      - message

